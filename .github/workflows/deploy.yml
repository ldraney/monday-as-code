name: Monday as Code CI/CD

on:
  pull_request:
    branches: [main]
    paths:
      - 'resources/**'
      - 'configs/**'
      - 'scripts/**'
  push:
    branches: [main]
    paths:
      - 'resources/**'
      - 'configs/**'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'lab'
        type: choice
        options:
        - lab
        - production
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply

env:
  MONDAY_API_TOKEN: ${{ secrets.MONDAY_API_TOKEN }}

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
      - name: Validate JSON files
        run: |
          echo "Validating JSON resource files..."
          find resources/ -name "*.json" -type f | while read -r file; do
            echo "Validating: $file"
            if ! jq empty "$file"; then
              echo "Invalid JSON in: $file"
              exit 1
            fi
            echo "Valid: $file"
          done
      - name: Test API connection
        run: |
          echo "Testing Monday.com API connection..."
          TEST_QUERY='{"query": "{ me { id name email } }"}'
          RESPONSE=$(curl -s -H "Authorization: $MONDAY_API_TOKEN" -H "Content-Type: application/json" -d "$TEST_QUERY" https://api.monday.com/v2)
          USER_NAME=$(echo "$RESPONSE" | jq -r '.data.me.name // "null"')
          if [[ "$USER_NAME" == "null" ]]; then
            echo "API connection failed"
            exit 1
          fi
          echo "Connected as: $USER_NAME"

  plan-lab:
    name: Plan Lab Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl
      - name: Plan deployment
        run: |
          chmod +x scripts/deploy.sh
          set -x
          ./scripts/deploy.sh plan --env lab 2>&1 | tee plan_output.txt
          echo "Exit code: $?"

  deploy-lab:
    name: Deploy Lab Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: lab
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl
      - name: Deploy to Lab
        run: |
          chmod +x scripts/deploy.sh
          set -x
          echo "Deploying to Lab environment..."
          ./scripts/deploy.sh apply --env lab 2>&1 | tee deploy_output.txt
          echo "Exit code: $?"
